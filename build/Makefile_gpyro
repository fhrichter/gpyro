# Gpyro property estimation program makefile - based on old NIST FDS Makefile
#
# To compile with the Intel compiler under linux, type: 
# make intel_linux
#
# To compile with the gfortran (gnu) compiler, type: 
# make gnu_linux

# The variable VPATH defines where the source code is relative to the current 
# directory

VPATH = ../../../src/common ../../../src/gpyro

# Definition of object variables

obj_serial = gpyro_prec.o gpyro_vars.o gpyro_funcs.o gpyro_bc.o gpyro_io.o gpyro_pyro.o gpyro_init.o gpyro_main.o

objwin_serial = $(obj_serial:.o=.obj)

#*** General Purpose Rules ***

no_target:
	@echo \******** You did not specify a make target \********
	@echo Please read the comments at the top of the makefile

setup:
%.o : %.mod

setup_win:
%.obj : %.mod

.SUFFIXES: .f90 .o .obj

.f90.o:
	$(FCOMPL) -c $(FFLAGS) $<
.f90.obj:
	$(FCOMPL) -c $(FFLAGS) $<

#gpyro_funcs.o: FFLAGS += $(FOPENMPFLAGS)
gpyro_pyro.o: FFLAGS += $(FOPENMPFLAGS)

#gpyro_funcs.obj: FFLAGS += $(FOPENMPFLAGS)
gpyro_pyro.obj: FFLAGS += $(FOPENMPFLAGS)

# Intel compiler:

intel_linux : FFLAGS = -O2 -ip -axCORE-AVX2
intel_linux : FCOMPL = $(GPYRO_FCOMPL_SERIAL_INTEL)
intel_linux : obj = gpyro
intel_linux : setup $(obj_serial)
	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)

intel_linux_openmp : FFLAGS = -O2 -ip -axCORE-AVX2
intel_linux_openmp : FCOMPL = $(GPYRO_FCOMPL_SERIAL_INTEL)
intel_linux_openmp : FOPENMPFLAGS = -qopenmp -liomp5
intel_linux_openmp : obj = gpyro_openmp
intel_linux_openmp : setup $(obj_serial)
	$(FCOMPL) $(FFLAGS) $(LFLAGS) $(FOPENMPFLAGS) -o $(obj) $(obj_serial)

intel_linux_debug : FFLAGS = -O0 -traceback -gen-interfaces -g -check all -debug all
intel_linux_debug : FCOMPL = $(GPYRO_FCOMPL_SERIAL_INTEL)
intel_linux_debug : obj = gpyro_debug
intel_linux_debug : setup $(obj_serial)
	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)

intel_win : FFLAGS = /O2 /Qip /QaxCORE-AVX2 /heap-arrays /MP
intel_win : FCOMPL = ifort
intel_win : obj = gpyro
intel_win : setup_win $(objwin_serial)
	$(FCOMPL) $(FFLAGS) -o $(obj) /F100000000 $(objwin_serial)

intel_win_openmp : FFLAGS = /O2 /Qip /QaxCORE-AVX2 /heap-arrays /MP
intel_win_openmp : FCOMPL = ifort
intel_win_openmp : FOPENMPFLAGS = /Qopenmp /MT
intel_win_openmp : obj = gpyro_openmp
intel_win_openmp : setup_win $(objwin_serial)
	$(FCOMPL) $(FFLAGS) $(LFLAGS) $(FOPENMPFLAGS)  -o $(obj) /F100000000  $(objwin_serial)

intel_win_debug : FFLAGS = /traceback /debug:full /Od /heap-arrays /MP
intel_win_debug : FCOMPL = ifort
intel_win_debug : obj = gpyro_debug
intel_win_debug : setup_win $(objwin_serial)
	$(FCOMPL) $(FFLAGS) -o $(obj) /F100000000 $(objwin_serial)

#Gnu compiler:

gnu_linux : FFLAGS = -O2 -unroll -frecord-marker=4 -ffree-line-length-none
gnu_linux : FCOMPL = $(GPYRO_FCOMPL_SERIAL_GNU)
gnu_linux : obj = gpyro
gnu_linux : setup $(obj_serial)
	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)

gnu_linux_debug : FFLAGS = -O0 -g -Wall -fcheck=all -fbacktrace -fdump-core -ffpe-trap=zero,overflow,underflow -frecord-marker=4 -ffree-line-length-none
gnu_linux_debug : FCOMPL = $(GPYRO_FCOMPL_SERIAL_GNU)
gnu_linux_debug : obj = gpyro_debug
gnu_linux_debug : setup $(obj_serial)
	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)

gnu_win : FFLAGS = -O2 -unroll -frecord-marker=4 -ffree-line-length-none
gnu_win : FCOMPL = gfortran
gnu_win : obj = gpyro
gnu_win : setup $(obj_serial)
	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)

#*** End Compiler Specific Rules ***

# *** Object Dependencies ***

gpyro_vars.o : gpyro_prec.o
gpyro_funcs.o : gpyro_prec.o gpyro_vars.o
gpyro_io.o : gpyro_prec.o gpyro_vars.o gpyro_funcs.o
gpyro_bc.o : gpyro_prec.o gpyro_vars.o gpyro_funcs.o
gpyro_init.o : gpyro_prec.o gpyro_vars.o gpyro_funcs.o gpyro_io.o
gpyro_pyro.o : gpyro_prec.o gpyro_vars.o gpyro_funcs.o gpyro_io.o
gpyro_main.o : gpyro_prec.o gpyro_vars.o gpyro_funcs.o gpyro_io.o gpyro_bc.o gpyro_init.o gpyro_pyro.o 

gpyro_vars.obj : gpyro_prec.obj
gpyro_funcs.obj : gpyro_prec.obj gpyro_vars.obj
gpyro_io.obj : gpyro_prec.obj gpyro_vars.obj gpyro_funcs.obj
gpyro_bc.obj : gpyro_prec.obj gpyro_vars.obj gpyro_funcs.obj
gpyro_init.obj : gpyro_prec.obj gpyro_vars.obj gpyro_funcs.obj gpyro_io.obj
gpyro_pyro.obj : gpyro_prec.obj gpyro_vars.obj gpyro_funcs.obj gpyro_io.obj
gpyro_main.obj : gpyro_prec.obj gpyro_vars.obj gpyro_funcs.obj gpyro_io.obj gpyro_bc.obj gpyro_init.obj gpyro_pyro.obj 

#*** Clean Target to remove Object and Module files ***

.PHONY : clean
clean:
	-rm -f *.o *.mod *.obj 

.PHONY : winclean
winclean:
	-erase *.mod *.obj 
