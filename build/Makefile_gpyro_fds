# Gpyro property estimation program makefile - based on old NIST FDS Makefile
#
# To compile with the Intel compiler (and MPI) under linux, type: 
# make intel_linux_mpi
#
# To compile with the gfortran (gnu) compiler, type: 
# make gnu_linux_mpi

# The variable VPATH defines where the source code is relative to the current 
# directory

VPATH = ../../../src/fds ../../../src/common  ../../../src/ms-mpi

# Definition of object variables
obj_serial = gpyro_prec.o gpyro_vars.o gpyro_funcs.o gpyro_bc.o gpyro_io.o gpyro_pyro.o gpyro_init.o \
             prec.o mpis.o cons.o devc.o data.o type.o mesh.o func.o smvv.o irad.o \
             ieva.o pois.o scrc.o radi.o evac.o gsmv.o geom.o part.o vege.o ctrl.o turb.o soot.o samr.o dump.o hvac.o mass.o \
             read.o wall.o fire.o divg.o init.o velo.o pres.o main.o

objwin_serial = $(obj_serial:.o=.obj)

# Definition of the MPI object variables

obj_mpi = gpyro_prec.o gpyro_vars.o gpyro_funcs.o gpyro_bc.o gpyro_io.o gpyro_pyro.o gpyro_init.o \
          prec.o cons.o devc.o data.o type.o mesh.o func.o smvv.o irad.o \
          ieva.o pois.o scrc.o radi.o evac.o gsmv.o geom.o part.o vege.o ctrl.o turb.o soot.o samr.o dump.o hvac.o mass.o \
          read.o wall.o fire.o divg.o init.o velo.o pres.o main.o

objwin_mpi = mpi.obj gpyro_prec.obj gpyro_vars.obj gpyro_funcs.obj gpyro_bc.obj gpyro_io.obj gpyro_pyro.obj gpyro_init.obj \
          prec.obj cons.obj devc.obj data.obj type.obj mesh.obj func.obj smvv.obj irad.obj \
          ieva.obj pois.obj scrc.obj radi.obj evac.obj gsmv.obj geom.obj part.obj vege.obj ctrl.obj turb.obj soot.obj samr.obj dump.obj hvac.obj mass.obj \
          read.obj wall.obj fire.obj divg.obj init.obj velo.obj pres.obj main.obj

#*** General Purpose Rules ***
no_target:
	@echo \******** You did not specify a make target \********
	@echo Please read the comments at the top of the makefile

setup:
%.o : %.mod

setup_win:
%.obj : %.mod

.SUFFIXES: .f90 .o .obj

.f90.o:
	$(FCOMPL) -c $(FFLAGS) $<
.f90.obj:
	$(FCOMPL) -c $(FFLAGS) $<

# Files which have OpenMP compiler directives are compiled using the FOPENMPFLAG and can be enabled/disabled on a per-file basis.

divg.o: FFLAGS += $(FOPENMPFLAGS)
# fire.o: FFLAGS += $(FOPENMPFLAGS)
func.o: FFLAGS += $(FOPENMPFLAGS)
mass.o: FFLAGS += $(FOPENMPFLAGS)
# part.o: FFLAGS += $(FOPENMPFLAGS)
pois.o: FFLAGS += $(FOPENMPFLAGS)
pres.o: FFLAGS += $(FOPENMPFLAGS)
turb.o: FFLAGS += $(FOPENMPFLAGS)
velo.o: FFLAGS += $(FOPENMPFLAGS)
radi.o: FFLAGS += $(FOPENMPFLAGS)
main.o: FFLAGS += $(FOPENMPFLAGS)
#gpyro_funcs.o: FFLAGS += $(FOPENMPFLAGS)
gpyro_pyro.o: FFLAGS += $(FOPENMPFLAGS)

divg.obj: FFLAGS += $(FOPENMPFLAGS)
# fire.obj: FFLAGS += $(FOPENMPFLAGS)
func.obj: FFLAGS += $(FOPENMPFLAGS)
mass.obj: FFLAGS += $(FOPENMPFLAGS)
# part.obj: FFLAGS += $(FOPENMPFLAGS)
pois.obj: FFLAGS += $(FOPENMPFLAGS)
pres.obj: FFLAGS += $(FOPENMPFLAGS)
turb.obj: FFLAGS += $(FOPENMPFLAGS)
velo.obj: FFLAGS += $(FOPENMPFLAGS)
radi.obj: FFLAGS += $(FOPENMPFLAGS)
main.obj: FFLAGS += $(FOPENMPFLAGS)
#gpyro_funcs.obj: FFLAGS += $(FOPENMPFLAGS)
gpyro_pyro.obj: FFLAGS += $(FOPENMPFLAGS)

# Intel Compiler

intel_linux : FFLAGS = -O2 -ip -no-prec-div -axCORE-AVX2
intel_linux : FCOMPL = $(GPYRO_FCOMPL_SERIAL_INTEL)
intel_linux : FOPENMPFLAGS = -qopenmp -liomp5
intel_linux : obj = fds6_gpyro
intel_linux : setup $(obj_serial)
	$(FCOMPL) $(FFLAGS) $(LFLAGS) $(FOPENMPFLAGS) -o $(obj) $(obj_serial)

intel_linux_mpi : FFLAGS = -O2 -ip -no-prec-div -axCORE-AVX2
intel_linux_mpi : FCOMPL = $(GPYRO_FCOMPL_MPI_INTEL)
intel_linux_mpi : obj = fds6_mpi_gpyro
intel_linux_mpi : setup $(obj_mpi)
	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_mpi)

intel_linux_mpi_debug : FFLAGS = -O0 -traceback -gen-interfaces -g -check all -debug all
intel_linux_mpi_debug : FCOMPL = $(GPYRO_FCOMPL_MPI_INTEL)
intel_linux_mpi_debug : obj = fds6_mpi_gpyro_debug
intel_linux_mpi_debug : setup $(obj_mpi)
	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_mpi)

intel_linux_openmp_mpi : FFLAGS = -O2 -ip -no-prec-div -axCORE-AVX2
intel_linux_openmp_mpi : FCOMPL = $(GPYRO_FCOMPL_MPI_INTEL)
intel_linux_openmp_mpi : FOPENMPFLAGS = -qopenmp -liomp5
intel_linux_openmp_mpi : obj = fds6_openmp_mpi_gpyro
intel_linux_openmp_mpi : setup $(obj_mpi)
	$(FCOMPL) $(FFLAGS) $(LFLAGS) $(FOPENMPFLAGS) -o $(obj) $(obj_mpi)

intel_linux_openmp_mpi_debug : FFLAGS = -O0 -traceback -gen-interfaces -g -check all -debug all
intel_linux_openmp_mpi_debug : FCOMPL = $(GPYRO_FCOMPL_MPI_INTEL)
intel_linux_openmp_mpi_debug : FOPENMPFLAGS = -qopenmp -liomp5
intel_linux_openmp_mpi_debug : obj = fds6_openmp_mpi_gpyro_debug
intel_linux_openmp_mpi_debug : setup $(obj_mpi)
	$(FCOMPL) $(FFLAGS) $(LFLAGS) $(FOPENMPFLAGS) -o $(obj) $(obj_mpi)

intel_win_mpi : MPILIB1 = "C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi.lib"
intel_win_mpi : MPILIB2 = "C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpifec.lib"
intel_win_mpi : MPIINCLUDE = "C:\Program Files (x86)\Microsoft SDKs\MPI\Include\x64"
intel_win_mpi : FFLAGS = /MP /O2 /Qip /Qno-prec-div /I $(MPIINCLUDE)
intel_win_mpi : FCOMPL = ifort
intel_win_mpi : obj = fds6_mpi_gpyro
intel_win_mpi : setup_win $(objwin_mpi)
	$(FCOMPL) -o $(obj) $(FFLAGS)  /F1000000000 $(objwin_mpi) $(MPILIB1) $(MPILIB2)

#Gnu compiler:

gnu_linux : FFLAGS = -O2 -unroll -frecord-marker=4 -ffree-line-length-none
gnu_linux : FCOMPL = $(GPYRO_FCOMPL_SERIAL_GNU)
gnu_linux : obj = fds6_gpyro
gnu_linux : setup $(obj_serial)
	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)

gnu_linux_mpi : FFLAGS = -O2 -unroll -frecord-marker=4 -ffree-line-length-none
gnu_linux_mpi : FCOMPL = $(GPYRO_FCOMPL_MPI_GNU)
gnu_linux_mpi : obj = fds6_mpi_gpyro
gnu_linux_mpi : setup $(obj_serial)
	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)

gnu_linux_mpi_debug : FFLAGS = -Og -g -Wall -fcheck=all -fbacktrace -fdump-core -ffpe-trap=zero,overflow,underflow -frecord-marker=4 -ffree-line-length-none
gnu_linux_mpi_debug : FCOMPL = $(GPYRO_FCOMPL_MPI_GNU)
gnu_linux_mpi_debug : obj = fds6_mpi_gpyro_debug
gnu_linux_mpi_debug : setup $(obj_serial)
	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)

gnu_win_mpi : MPILIB1 = "C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi.lib"
gnu_win_mpi : MPILIB2 = "C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpifec.lib"
gnu_win_mpi : MPIINCLUDE = "C:\Program Files (x86)\Microsoft SDKs\MPI\Include\x64"
gnu_win_mpi : FFLAGS = -O2 -unroll -frecord-marker=4 -ffree-line-length-none -I$(MPIINCLUDE) -L$(MPILIB1) -L$(MPILIB2)
gnu_win_mpi : FCOMPL = gfortran
gnu_win_mpi : obj = fds6_mpi_gpyro
gnu_win_mpi : setup $(objwin_mpi)
	$(FCOMPL) -o $(obj) $(FFLAGS) $(objwin_mpi)

#*** End Compiler Specific Rules ***

# *** Object Dependencies ***

gpyro_vars.o : gpyro_prec.o
gpyro_funcs.o : gpyro_prec.o gpyro_vars.o
gpyro_io.o : gpyro_prec.o gpyro_vars.o gpyro_funcs.o
gpyro_bc.o : gpyro_prec.o gpyro_vars.o gpyro_funcs.o
gpyro_init.o : gpyro_prec.o gpyro_vars.o gpyro_funcs.o gpyro_io.o
gpyro_pyro.o : gpyro_prec.o gpyro_vars.o gpyro_funcs.o gpyro_io.o 
cons.o : prec.o
mpis.o : prec.o
type.o : prec.o cons.o
devc.o : prec.o
pois.o : prec.o cons.o
mesh.o : prec.o type.o
data.o : prec.o func.o cons.o
func.o : prec.o cons.o type.o mesh.o devc.o
smvv.o : prec.o func.o
ctrl.o : prec.o cons.o type.o mesh.o func.o
turb.o : func.o prec.o cons.o mesh.o
soot.o : prec.o mesh.o cons.o func.o turb.o
samr.o : prec.o cons.o mesh.o turb.o
gsmv.o : func.o prec.o cons.o mesh.o
geom.o : gsmv.o func.o prec.o cons.o mesh.o
scrc.o : prec.o cons.o mesh.o func.o pois.o
irad.o : func.o prec.o cons.o type.o mesh.o
ieva.o : func.o prec.o cons.o type.o mesh.o
fire.o : func.o prec.o cons.o type.o mesh.o
hvac.o : func.o prec.o cons.o type.o mesh.o ctrl.o
wall.o : func.o prec.o cons.o type.o mesh.o hvac.o mass.o soot.o
velo.o : func.o prec.o cons.o type.o mesh.o turb.o geom.o
evac.o : func.o prec.o cons.o type.o mesh.o ieva.o data.o
divg.o : func.o prec.o cons.o type.o mesh.o scrc.o evac.o mass.o
mass.o : func.o prec.o cons.o type.o mesh.o turb.o soot.o
radi.o : func.o prec.o cons.o type.o mesh.o irad.o
pres.o : func.o prec.o cons.o type.o mesh.o pois.o velo.o scrc.o
part.o : func.o prec.o cons.o type.o mesh.o devc.o data.o geom.o
vege.o : func.o prec.o cons.o type.o mesh.o devc.o part.o
read.o : func.o prec.o cons.o type.o mesh.o devc.o ctrl.o irad.o evac.o hvac.o scrc.o data.o geom.o mass.o soot.o
init.o : func.o prec.o cons.o type.o mesh.o devc.o irad.o pois.o data.o evac.o
dump.o : func.o prec.o cons.o type.o mesh.o devc.o evac.o smvv.o turb.o scrc.o data.o radi.o soot.o
main.o : func.o prec.o cons.o type.o mesh.o devc.o smvv.o mass.o divg.o velo.o wall.o fire.o irad.o ieva.o radi.o evac.o part.o vege.o dump.o read.o init.o pres.o pois.o ctrl.o turb.o hvac.o scrc.o data.o geom.o soot.o

gpyro_vars.obj : gpyro_prec.obj
gpyro_funcs.obj : gpyro_prec.obj gpyro_vars.obj
gpyro_io.obj : gpyro_prec.obj gpyro_vars.obj gpyro_funcs.obj
gpyro_bc.obj : gpyro_prec.obj gpyro_vars.obj gpyro_funcs.obj
gpyro_init.obj : gpyro_prec.obj gpyro_vars.obj gpyro_funcs.obj gpyro_io.obj
gpyro_pyro.obj : gpyro_prec.obj gpyro_vars.obj gpyro_funcs.obj gpyro_io.obj 
cons.obj : prec.obj
mpis.obj : prec.obj
type.obj : prec.obj cons.obj
devc.obj : prec.obj
pois.obj : prec.obj cons.obj
mesh.obj : prec.obj type.obj
data.obj : prec.obj func.obj cons.obj
func.obj : prec.obj cons.obj type.obj mesh.obj devc.obj
smvv.obj : prec.obj func.obj
ctrl.obj : prec.obj cons.obj type.obj mesh.obj func.obj
turb.obj : func.obj prec.obj cons.obj mesh.obj
soot.obj : prec.obj mesh.obj cons.obj func.obj turb.obj
samr.obj : prec.obj cons.obj mesh.obj turb.obj
gsmv.obj : func.obj prec.obj cons.obj mesh.obj
geom.obj : func.obj prec.obj cons.obj mesh.obj
scrc.obj : prec.obj cons.obj mesh.obj func.obj pois.obj
irad.obj : func.obj prec.obj cons.obj type.obj mesh.obj
ieva.obj : func.obj prec.obj cons.obj type.obj mesh.obj
fire.obj : func.obj prec.obj cons.obj type.obj mesh.obj
hvac.obj : func.obj prec.obj cons.obj type.obj mesh.obj ctrl.obj soot.obj
wall.obj : func.obj prec.obj cons.obj type.obj mesh.obj hvac.obj mass.obj
velo.obj : func.obj prec.obj cons.obj type.obj mesh.obj turb.obj geom.obj
evac.obj : func.obj prec.obj cons.obj type.obj mesh.obj ieva.obj data.obj 
divg.obj : func.obj prec.obj cons.obj type.obj mesh.obj scrc.obj evac.obj mass.obj
mass.obj : func.obj prec.obj cons.obj type.obj mesh.obj turb.obj soot.obj
radi.obj : func.obj prec.obj cons.obj type.obj mesh.obj irad.obj
pres.obj : func.obj prec.obj cons.obj type.obj mesh.obj pois.obj velo.obj scrc.obj
part.obj : func.obj prec.obj cons.obj type.obj mesh.obj devc.obj data.obj geom.obj
vege.obj : func.obj prec.obj cons.obj type.obj mesh.obj devc.obj part.obj
read.obj : func.obj prec.obj cons.obj type.obj mesh.obj devc.obj ctrl.obj irad.obj evac.obj hvac.obj scrc.obj data.obj geom.obj mass.obj soot.obj
init.obj : func.obj prec.obj cons.obj type.obj mesh.obj devc.obj irad.obj pois.obj data.obj evac.obj
dump.obj : func.obj prec.obj cons.obj type.obj mesh.obj devc.obj evac.obj smvv.obj turb.obj scrc.obj data.obj radi.obj soot.obj
main.obj : func.obj prec.obj cons.obj type.obj mesh.obj devc.obj smvv.obj mass.obj divg.obj velo.obj wall.obj fire.obj irad.obj ieva.obj radi.obj evac.obj part.obj vege.obj dump.obj read.obj init.obj pres.obj pois.obj ctrl.obj turb.obj hvac.obj scrc.obj data.obj geom.obj soot.obj

#*** Clean Target to remove Object and Module files ***

.PHONY : clean
clean:
	-rm -f *.o *.mod *.obj 

.PHONY : winclean
winclean:
	-erase *.mod *.obj 
